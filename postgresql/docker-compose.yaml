services:
  pg_primary:
    image: postgres:17
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${PG_PRIMARY_USER}
      POSTGRES_PASSWORD: ${PG_PRIMARY_PASSWORD}
      POSTGRES_DB: ${PG_PRIMARY_DB}
      POSTGRES_HOST_AUTH_METHOD: ${PG_HBA_ENTRY}
      POSTGRES_INITDB_ARGS: ${PG_INITDB_ARGS}
    ports:
      - ${PG_PRIMARY_DB_PORT}
    volumes:
      - pg_primary_data:/var/lib/postgresql/data
      # Database initialization
      - ./init/primary_init.sql:/docker-entrypoint-initdb.d/primary_init.sql
      # Shared schema file
      - ./init/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./init/config/primary.conf:/primary.conf
    command: >
      postgres -c config_file=/primary.conf

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pg_standby:
    image: postgres:17
    depends_on:
      pg_primary:
        condition: service_healthy
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${PG_STANDBY_USER}
      POSTGRES_PASSWORD: ${PG_STANDBY_PASSWORD}
      POSTGRES_DB: ${PG_STANDBY_DB}
      POSTGRES_HOST_AUTH_METHOD: ${PG_HBA_ENTRY}
      POSTGRES_INITDB_ARGS: ${PG_INITDB_ARGS}
    ports:
      - ${PG_STANDBY_DB_PORT}
    volumes:
      - pg_standby_data:/var/lib/postgresql/data
      # Database initialization
      - ./init/standby_init.sql:/docker-entrypoint-initdb.d/standby_init.sql
      # Shared schema file
      - ./init/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./init/config/standby.conf:/standby.conf
    command: >
      postgres -c config_file=/standby.conf

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  replication_test:
    image: postgres:17
    depends_on:
      pg_primary:
        condition: service_healthy
      pg_standby:
        condition: service_healthy
    env_file:
      - .env
    environment:
      PG_PRIMARY_HOST: ${PG_PRIMARY_HOST}
      PG_PRIMARY_USER: ${PG_PRIMARY_USER}
      PG_PRIMARY_PASSWORD: ${PG_PRIMARY_PASSWORD}
      PG_PRIMARY_DB: ${PG_PRIMARY_DB}
      PG_PRIMARY_DB_PORT: ${PG_PRIMARY_DB_PORT}
      PG_STANDBY_HOST: ${PG_STANDBY_HOST}
      PG_STANDBY_USER: ${PG_STANDBY_USER}
      PG_STANDBY_PASSWORD: ${PG_STANDBY_PASSWORD}
      PG_STANDBY_DB: ${PG_STANDBY_DB}
      PG_STANDBY_DB_PORT: ${PG_STANDBY_DB_PORT}
    volumes:
      - ./tests/test_replication.sh:/test_replication.sh
    entrypoint: ["/bin/bash", "/test_replication.sh"]

volumes:
  pg_primary_data:
  pg_standby_data:



